#pragma once
////////////////////////////////////////////////////////////////////////////////
#include <Engine/Base>
////////////////////////////////////////////////////////////////////////////////

// C++ Standard Library
#include <memory>

////////////////////////////////////////////////////////////////////////////////
// Forward declarations
////////////////////////////////////////////////////////////////////////////////

NAMESPACE_BEGIN(Application)

class ApplicationInfo;
class EngineInfo;
class Preferences;

NAMESPACE_END(Application)

NAMESPACE_BEGIN(Renderer::Graphics)

class GraphicsRenderer_Interface;

NAMESPACE_END(Renderer::Graphics)

NAMESPACE_BEGIN(System)

class HostPlatform;

NAMESPACE_END(System)

////////////////////////////////////////////////////////////////////////////////
// Factory functions
////////////////////////////////////////////////////////////////////////////////

NAMESPACE_BEGIN(Renderer::Graphics)

std::unique_ptr<GraphicsRenderer_Interface>
Create(
  Application::ApplicationInfo const& applicationInfo,
  Application::EngineInfo const&,
  Application::Preferences& preferences,
  System::HostPlatform& hostPlatform);

NAMESPACE_END(Renderer::Graphics)
