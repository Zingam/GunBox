#pragma once
////////////////////////////////////////////////////////////////////////////////
#include <Engine/Base>
////////////////////////////////////////////////////////////////////////////////

// Project headers - System
#include "System/DeviceTypes/Graphics/GeometryTypes.hpp"

// C++ Standard Library
#include <vector>

////////////////////////////////////////////////////////////////////////////////
// Class declarations
////////////////////////////////////////////////////////////////////////////////

NAMESPACE_BEGIN(System)

class Monitor
{
private:
  Monitor(DeviceTypes::Graphics::Rectangle2D_t rectangle);

  // Properties
public:
  auto IsPrimary() -> bool;
  auto MidPoint() -> DeviceTypes::Graphics::Point2D_t;

public:
  friend auto EnumerateMonitors() -> std::vector<Monitor>;

private:
  DeviceTypes::Graphics::Rectangle2D_t rectangle;
};

////////////////////////////////////////////////////////////////////////////////
// Friend functions
////////////////////////////////////////////////////////////////////////////////

auto
EnumerateMonitors() -> std::vector<Monitor>;

NAMESPACE_END(System)
