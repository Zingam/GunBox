#pragma once
////////////////////////////////////////////////////////////////////////////////
#include <Engine/Base>
////////////////////////////////////////////////////////////////////////////////

// Project headers
#include "EventHandling/Commands/Command_Interface.hpp"

// C++ Standard Library
#include <any>

////////////////////////////////////////////////////////////////////////////////
// Forward declarations
////////////////////////////////////////////////////////////////////////////////

NAMESPACE_BEGIN(GunBox)

class GameState;

NAMESPACE_END(GunBox)

////////////////////////////////////////////////////////////////////////////////
// Class declarations
////////////////////////////////////////////////////////////////////////////////

NAMESPACE_BEGIN(GunBox)

class Command_UpdateApplicationState final : public Command_Interface
{
  // Constructors & Destructors
public:
  Command_UpdateApplicationState(GameState& gameState);
  ~Command_UpdateApplicationState() final;

  // Virtual methods
public:
  auto Execute([[maybe_unused]] std::any const& data) -> void final;

  // Data members - variables
private:
  GameState& gameState;
};

NAMESPACE_END(GunBox)
